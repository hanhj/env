#<center>git服务器的安装与设置</center>

##1安装 openssh服务器
    sudo apt-get install openssh-server openssh-client

##2创建个人公钥和私钥
    ssh-keygen -t rsa
    ssh-keygen -t rsa -C “YourEmail”  这样产生的key包括email地址

 默认生成2048位，如果需要提高安全级别，也可以通过`ssh-keygen -t rsa -b 4096`创建公钥和私钥 
     
 默认情况下，公钥和私钥会保存在~/.ssh目录下，id_rsa  id_rsa.pub

##3建立git远程服务，建立远程仓库 
###3.1安装git软件
    sudo apt-get install git-core  
###3.2创建git管理用户
    sudo useradd -m git 
    
useradd 仅仅是创建一个普通用户，不要求输入密码  -m 表示创建home目录
		 userdel 删除用户

		 创建git用户也可以用adduser命令
		 sudo adduser git 
			adduser 可以同时创建用户和组，同时输入密码
		 deluser 删除用户和组
			--remove-home 删除用户的同时，删除用户目录。
			--group groupname 删除组
		说明：如果用adduser创建用户，则同时创建了目录和密码，会给用gitosis来管理git仓库带来不便，所以如果想用gitosis来管理仓库最好用useradd来创建用户。如果用adduser来创建git用户，则只能用手工方式来管理仓库。
		 passwd 用来修改用户密码

###3.3创建git仓库存储目录 
		如果用gitosis来管理仓库，这一步不需要。
		下面是手动建立仓库目录：
		sudo mkdir /home/git/repositories
 		设置git仓库权限 
 		sudo chown git:git /home/git/repositories
 		sudo chmod 755 /home/git/repositories
 
###3.4 初始化全局设置 
		 git config --global user.name "myname"
		 git config --global user.email "myname@server"
		 这个与设置gitosis无关，一般都要设置，其设置的内容在用户目录下的.gitconfig文件中，在这个文件中可以设置alias别名，用来方便使用git。
		 [alias]
		 co=checkout
		 ci=commit
		 br=branch
		 …
 
##4安装gitosis 
###4.1安装python工具
		sudo apt-get install python-setuptools
		这个需要，否则在gitosis目录下执行python setup.py install 出错。

###4.2 克隆gitosis软件
		 cd /tmp
		 git clone https://github.com/res0nat0r/gitosis.git

###4.3安装gitosis 
		 cd gitosis
		 sudo python setup.py install   安装gitosis的相关命令
		 sudo -H -u git gitosis-init < ~/.ssh/id_rsa.pub 
			这个命令会建立/home/git/repositories/gitosis-admin.git仓库，并将id_rsa.pub放入到/home/git/.ssh/authorized_keys中。
			 -H 表示在用户的目录，-u 表示用户 
		 sudo chmod 755 /home/git/repositories/gitosis-admin.git/hooks/post-update
			 chmod 755 不必要，除非umask不是022.

###4.4管理gitosis
####4.4.1克隆gitosis-admin仓库
			 cd ~
			 git clone git@host:用户名/gitosis-admin.git
				 例如： git clone git@localhost:gitosis-admin.git
				下载gitosis-admin仓库。这里不需要加入repositories目录，由gitosis自动来加。
			 cd gitosis-admin/
				如果报错，比如	：
				 Cloning into 'gitosis-admin'...
				 ERROR:gitosis.serve.main:Repository read access denied
				 fatal: The remote end hung up unexpectedly
				 可能原因：
				 1.检查输入命令拼写是否有错。
				 2.不要输入路径，由gitosis自动管理，比如git clone git@localhost:repositories/gitosis-admin.git 
####4.4.2配置gitosis
			 gitosis-admin目录下有keydir目录和gitosis.conf文件。
			 keydir：用来存放各个用户的公钥。
				将各个用户的id_rsa.pub公钥文件，拷贝到这个目录下。注意要改名为xxx.pub,xxx就是用户名。 
			 gitosis.conf文件：用来分配仓库和用户权限。 
				 [gitosis]
				 [group gitosis-admin]
				 writable = gitosis-admin
				 members = a
				 [group developers]
				 writable = helloworld
				 members = a b
				 [group test] 
				 readonly = helloworld
				 members = c
				 这个配置文件表达了如下含义：gitosis-admin组成员有a，该组对gitosis-admin仓库有读写权限； developers组有a，b两个成员，该组对helloworld仓库有读写权限； test组有c一个成员，对helloworld仓库有只读权限。 
				 
				 当然目前这些配置文件的修改只是在你的本地，你必须推送到gitserver上才能真正生效。 加入新文件、提交并push到git服务器： 
				 git commit -am "add helloworld project and users"
				 git push 
####4.4.3使用gitosis添加新仓库：
			cd ~
			mkdir test
			git init test
			...make some chang in this directory.
			git ci "init"
			git remote add origin git@localhost:test.git 
			git push origin master 

##5手动管理git 
	由于种种原因，比如数据库迁移，需要手动来管理git仓库。
	sudo vi /home/git/.ssh/authorized_keys
		put user pub key into this file 
		此时，用户是以git身份来访问git仓库的。
	cd /home/git/repositories/ 
	sudo mkdir test.git 
	sudo git init test.git 
		初始化仓库
	sudo chown git:git test.git -R
		将目录改为git用户拥有

	客户端：
		git clone git@localhost:repositories/test.git 
		注意：这里就要加上绝对路径了。

##6配置 gitweb 
 安装gitweb 
 sudo apt-get install gitweb
 默认是安装到/usr/share/gitweb目录下
 
 默认没有 css 加载，把 gitweb 要用的静态文件连接到 DocumentRoot 下： 
 cd /var/www/
 sudo ln -s /usr/share/gitweb/* .
 如果按照下面我的做法，这步可以不做
 修改配置： 
 sudo vi /etc/gitweb.conf
 将 $projectroot 改为git仓库存储目录(例如：/home/git/repositories)，保存后刷新浏览器。 
 
 如果没有找到项目，你需要将$projectroot/*.git 的属性改为755，让apache用户有可读权限。可以只改你需要让别人通过web访问的那个git。 http://localhost/cgi-bin/gitweb.cgi 
 
 修改/etc/gitweb.conf 内容： 
 # path to git projects (<project>.git)
 #$projectroot = "/var/cache/git";
 $projectroot = "/home/git/repositories";
 一般只需要改这个就可以了
 # directory to use for temp files
 $git_temp = "/tmp";
 # target of the home link on top of all pages
 $home_link = $my_uri || "/";
 # html text to include at home page
 $home_text = "indextext.html";
 # file with project list; by default, simply scan the projectroot dir.
 $projects_list = $projectroot;
 # stylesheet to use
 @stylesheets = ("/gitweb/static/gitweb.css");
 # javascript code for gitweb
 $javascript = "gitweb/static/gitweb.js";
 # logo to use
 $logo = "/gitweb/static/git-logo.png";
 # the 'favicon'
 $favicon = "/gitweb/static/git-favicon.png";
 # git-diff-tree(1) options to use for generated patches
 #@diff_opts = ("-M");
 @diff_opts = ();

##10安装apache2
 sudo apt-get install apache2

##11配置apache2 
 ubuntu中默认的web目录是/var/www，默认的cgi目录是 /usr/lib/cgi-bin/,安装完成gitweb后，gitweb的gitweb.cgi会自动放置到该目录下。 （实际上是安装了个链接）
 如果你的cgi路径不是默认的/usr/lib/cgi-bin/，需要将gitweb安装在/usr/lib/cgi-bin中的 gitweb.cgi复制到原来配置的cgi-bin路径，并在apache的配置文件/etc/apache2/apache.conf末尾加上以下内容： 
 SetEnv  GITWEB_CONFIG   /etc/gitweb.conf 
 <Directory "/srv/www/cgi-bin/gitweb">           
      Options FollowSymlinks ExecCGI          
      Allow from all                          
      AllowOverride all                       
      Order allow,deny                        
      <Files gitweb.cgi> 
           SetHandler cgi-script 
      </Files>                    
      RewriteEngine on 
      RewriteCond %{REQUEST_FILENAME} !-f 
      RewriteCond %{REQUEST_FILENAME} !-d 
      RewriteRule ^.* /gitweb.cgi/$0 [L,PT] 
 </Directory>
 重新启动apache：sudo /etc/init.d/apache2 restart，访问http://localhost/cgi-bin/gitweb.cgi
 
 可以不这样做。在/etc/apache2/conf.d中有gitweb文件
 Alias /gitweb /usr/share/gitweb        ---指出别名
 <Directory /usr/share/gitweb>            ---指出别名所在的目录
   Options FollowSymLinks +ExecCGI
   AddHandler cgi-script .cgi
 </Directory>
 这样就可以通过http://locolhost/gitweb/来访问git仓库了
 usr/share/gitweb下所放的文件如下：
 /usr/share/gitweb 
 ├── gitweb.cgi 
 ├── index.cgi -> gitweb.cgi 
 └── static 
     ├── git-favicon.png 
     ├── git-logo.png 
     ├── gitweb.css 
     └── gitweb.js 
 
##12安装Cgit
 Cgit是另外一个类似gitweb的git仓库页面显示软件。
 获取cgit
 方法一：clone
 克隆地址：
 git://git.zx2c4.com/cgit或
 http://git.zx2c4.com/cgit 或
 ssh://git@git.zx2c4.com/cgit
 随便找个目录，比如～目录
 cd ～
 git clone git://git.zx2c4.com/cgit
 cd cgit
 
 方法二：下载代码
 wget http://git.zx2c4.com/cgit/snapshot/cgit-0.9.2.zip
 访问http://git.zx2c4.com/cgit/ 下载最新代码
 编译cgit
 make get-git
 make 
 make install
 
 Makefile中默认的cgit安装目录是/var/www/htdocs/cgit
 这里可以修改CGIT_SCRIPT_PATH=你想要的路径，比如/usr/share/cgit
 make的时候可能会报找不到openssl头文件的错误，是因为没有安装openssl的开发包，可以执行以下命令：
 sudo apt-get install libcurl4-openssl-dev
 
##13配置cgit
 添加apache2的配置文件
 在/etc/apache2/conf.d目录下添加一个cgit文件。注意这个文件不是自动生成的，需要手工敲入。
 文件内容如下
 Alias /cgit /usr/share/cgit 
  <Directory /usr/share/cgit> 
     AllowOverride None
     Options +ExecCGI
     Order allow,deny
     DirectoryIndex /cgit/cgit.cgi
     Allow from all
      AddHandler cgi-script .cgi 
 </Directory>
 添加链接
 sudo mkdir /var/www/cgit
 sudo ln -s /usr/share/cgit/* /var/www/cgit/.
 添加cgit的配置文件
 在/etc目录下添加cgitrc文件。注意这个文件不是自动生成的，需要手工敲入。
 css=/cgit/cgit.css 
 logo=/cgit/cgit.png 
 robots=noindex,nofollow 
 scan-path=/home/git 
 #repo.url=test.git 
 #repo.path=/home/git/test.git 
 #repo.desc=ggg 
 #repo.owner=hanhj
 
 scan-path 表示自动搜索git仓库所在目录
 如果要手工配置仓库则添加被注释掉的repo配置
 
 重新启动apache：sudo etc/init.d/apache2 restart
 在浏览器中输入地址 http://localhost/cgit 就可以看到如下界面了

 可能要将www-data的用户加到git组中,否则www-data用户无法访问git仓库.
 git仓库一般默认建在/home/git用户目录下.
